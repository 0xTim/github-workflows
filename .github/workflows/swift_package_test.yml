name: Swift Linux Matrix

on:
  workflow_call:
    inputs:
      exclude_swift_versions:
        type: string
        description: "Exclude Swift version list (JSON)"
        default: "[{\"swift_version\": \"\"}]"
      os_versions:
        type: string
        description: "OS version list (JSON)"
        default: "[\"jammy\"]"
      swift_flags:
        type: string
        description: "Swift flags for release version"
        default: ""
      swift_nightly_flags:
        type: string
        description: "Swift flags for nightly version"
        default: ""
      pre_build_command:
        type: string
        description: "Command to execute before building the Swift package"
        default: ""
      build_command:
        type: string
        description: "Build command default is swift test"
        default: "swift test"
      env_vars:
        description: "List of environment variables"
        type: string

jobs:
  build:
    name: Linux (${{ matrix.swift_version }} - ${{ matrix.os_version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        swift_version: ['5.8', '5.9', '5.10', '6.0', 'nightly-main', 'nightly-6.0']
        os_version: ${{ fromJson(inputs.os_versions) }}
        exclude:
          -  ${{ fromJson(inputs.exclude_swift_versions) }}
    container:
      image: ${{ (contains(matrix.swift_version, 'nightly') && 'swiftlang/swift') || 'swift' }}:${{ matrix.swift_version }}-${{ matrix.os_version }}
    steps:
    - name: Swift version
      run: swift --version
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Set environment variables
      if: ${{ inputs.env_vars }}
      run: |
          for i in "${{ inputs.env_vars }}"
          do
            printf "%s\n" $i >> $GITHUB_ENV
          done
    - name: Pre-build
      run: ${{ inputs.pre_build_command }}
    - name: Build
      run: ${{ inputs.build_command }} ${{ (contains(matrix.swift_version, 'nightly') && inputs.swift_nightly_flags) || inputs.swift_flags }}
